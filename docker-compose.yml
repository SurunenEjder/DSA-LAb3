#version: '3.8'

services:
  mymongo:
    image: mongo:latest
    container_name: mymongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

  grpc-service:
    build:
      context: grpc
      dockerfile: Dockerfile
    container_name: grpc-service
    depends_on:
      mymongo:
        condition: service_healthy
    environment:
      MONGO_HOST: mymongo
      MONGO_PORT: 27017
      MONGO_DB: itemsdb
      MONGO_USER: root
      MONGO_PASSWORD: example
    ports:
      - "50051:50051"
    healthcheck:
      test: ["CMD", "python", "-c", "import grpc; from grpc_health.v1 import health_pb2, health_pb2_grpc; channel = grpc.insecure_channel('localhost:50051'); stub = health_pb2_grpc.HealthStub(channel); exit(0 if stub.Check(health_pb2.HealthCheckRequest()).status == 1 else 1)"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  rest-service:
    build:
      context: rest
      dockerfile: Dockerfile
    container_name: rest-service
    depends_on:
      grpc-service:
        condition: service_healthy
    environment:
      GRPC_HOST: grpc-service
      GRPC_PORT: 50051
    ports:
      - "5000:5000"